load(
      "@rules_cc//cc:defs.bzl"
   ,  "cc_library"
)

cc_library(
      name       = "aapFunctionalCluster_Cryptography"
   ,  srcs       = ["aapFunctionalCluster_Cryptography.cpp"]
#  ,  deps       = ["//repo_projects/pProjectFull/main_LATEST/source/SwcServiceEcuM:SwcServiceEcuM"]
   ,  hdrs       = [
            "interface_Cryptography_AuthCipherCtx.hpp"
         ,  "interface_Cryptography_BlockService.hpp"
         ,  "interface_Cryptography_Certificate.hpp"
         ,  "interface_Cryptography_CertSignRequest.hpp"
         ,  "interface_Cryptography_CryptoContext.hpp"
         ,  "interface_Cryptography_CryptoPrimitiveId.hpp"
         ,  "interface_Cryptography_CryptoProvider.hpp"
         ,  "interface_Cryptography_CryptoService.hpp"
         ,  "interface_Cryptography_DecryptorPrivateCtx.hpp"
         ,  "interface_Cryptography_DigestService.hpp"
         ,  "interface_Cryptography_EncryptorPrivateCtx.hpp"
         ,  "interface_Cryptography_ExtensionService.hpp"
         ,  "interface_Cryptography_HashFunctionCtx.hpp"
         ,  "interface_Cryptography.hpp"
         ,  "interface_Cryptography_IO.hpp"
         ,  "interface_Cryptography_KeyAgreementPrivateCtx.hpp"
         ,  "interface_Cryptography_KeyDecapsulatorPrivateCtx.hpp"
         ,  "interface_Cryptography_KeyDerivationFunctionCtx.hpp"
         ,  "interface_Cryptography_KeyEncapsulatorPublicCtx.hpp"
         ,  "interface_Cryptography_KeySlot.hpp"
         ,  "interface_Cryptography_KeyStorageProvider.hpp"
         ,  "interface_Cryptography_MessageAuthnCodeCtx.hpp"
         ,  "interface_Cryptography_MsgRecoveryPublicCtx.hpp"
         ,  "interface_Cryptography_PrivateKey.hpp"
         ,  "interface_Cryptography_RandomGeneratorCtx.hpp"
         ,  "interface_Cryptography_Serializable.hpp"
         ,  "interface_Cryptography_SigEncodePrivateCtx.hpp"
         ,  "interface_Cryptography_SignatureService.hpp"
         ,  "interface_Cryptography_SignerPrivateCtx.hpp"
         ,  "interface_Cryptography_StreamCipherCtx.hpp"
         ,  "interface_Cryptography_SymmetricBlockCipherCtx.hpp"
         ,  "interface_Cryptography_SymmetricKey.hpp"
         ,  "interface_Cryptography_SymmetricKeyWrapperCtx.hpp"
         ,  "interface_Cryptography_UpdatesObserver.hpp"
         ,  "interface_Cryptography_VerifierPublicCtx.hpp"
         ,  "interface_Cryptography_VolatileTrustedContainer.hpp"
         ,  "interface_Cryptography_X509CustomExtensionsParser.hpp"
         ,  "interface_Cryptography_X509DN.hpp"
         ,  "interface_Cryptography_X509Provider.hpp"
         ,  "interface_Cryptography_X509PublicKeyInfo.hpp"
      ]
   ,  includes   = ["."]
   ,  visibility = ["//visibility:public"]
)

